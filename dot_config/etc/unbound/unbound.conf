include: "/etc/unbound/unbound.conf.d/*.conf"

server:

    verbosity: 2
    # specify the interface to answer queries from by ip-address.
    interface: 127.0.0.1
    interface: ::1

    do-ip4: yes
    do-ip6: yes
    do-udp: yes
    do-tcp: yes

    # You want to leave this to no unless you have *native* IPv6. With 6to4 and
    # Terredo tunnels your web browser should favor IPv4 for the same reasons
    prefer-ip6: no

    hide-identity: yes
    hide-version: yes

    root-hints: root.hints

    prefetch: yes

    serve-expired: yes

    # Use about 2x more for rrset cache, total memory use is about 2-2.5x
    # total cache size. Current setting is way overkill for a small network.
    # Judging from my used cache size you can get away with 8/16 and still
    # have lots of room, but I've got the ram and I'm not using it on anything else.
    # Default is 4m/4m
    msg-cache-size: 128m
    rrset-cache-size: 256m

    # location of the trust anchor file that enables DNSSEC. note that
    # the location of this file can be elsewhere
    trust-anchor-file: "/etc/unbound/trusted-key.key"

    tls-system-cert: yes

    do-not-query-localhost: no

    # send minimal amount of information to upstream servers to enhance privacy
    qname-minimisation: yes

    aggressive-nsec: yes

    # Trust glue only if it is within the server's authority
    harden-glue: yes

    # Require DNSSEC data for trust-anchored zones, if such data is absent, the zone becomes BOGUS
    harden-dnssec-stripped: yes

    # Reduce EDNS reassembly buffer size.
    # IP fragmentation is unreliable on the Internet today, and can cause
    # transmission failures when large DNS messages are sent via UDP. Even
    # when fragmentation does work, it may not be secure; it is theoretically
    # possible to spoof parts of a fragmented DNS message, without easy
    # detection at the receiving end. Recently, there was an excellent study
    # >>> Defragmenting DNS - Determining the optimal maximum UDP response size for DNS <<<
    # by Axel Koolhaas, and Tjeerd Slokker (https://indico.dns-oarc.net/event/36/contributions/776/)
    # in collaboration with NLnet Labs explored DNS using real world data from the
    # the RIPE Atlas probes and the researchers suggested different values for
    # IPv4 and IPv6 and in different scenarios. They advise that servers should
    # be configured to limit DNS messages sent over UDP to a size that will not
    # trigger fragmentation on typical network links. DNS servers can switch
    # from UDP to TCP when a DNS response is too big to fit in this limited
    # buffer size. This value has also been suggested in DNS Flag Day 2020.
    edns-buffer-size: 1232

    # Don't use Capitalization randomization as it known to cause DNSSEC issues sometimes
    # see https://discourse.pi-hole.net/t/unbound-stubby-or-dnscrypt-proxy/9378 for further details
    use-caps-for-id: no

    # One thread should be sufficient, can be increased on beefy machines. In reality for most users running on small networks or on a single machine, it should be unnecessary to seek performance enhancement by increasing num-threads above 1.
    num-threads: 1

    # Ensure kernel buffer is large enough to not lose messages in traffic spikes
    so-rcvbuf: 1m

    private-domain: "intranet"
    private-domain: "internal"
    private-domain: "private"
    private-domain: "corp"
    private-domain: "home"
    private-domain: "lan"

    domain-insecure: "intranet"
    domain-insecure: "internal"
    domain-insecure: "private"
    domain-insecure: "corp"
    domain-insecure: "home"
    domain-insecure: "lan"

    # Ensure privacy of local IP ranges
    private-address: 192.168.0.0/16
    private-address: 169.254.0.0/16
    private-address: 172.16.0.0/12
    private-address: 10.0.0.0/8
    private-address: fd00::/8
    private-address: fe80::/10

    private-address: 192.0.2.0/24
    private-address: 198.51.100.0/24
    private-address: 203.0.113.0/24
    private-address: 255.255.255.255/32
    private-address: 2001:db8::/32

    local-zone: "localhost." static
    local-data: "localhost. 10800 IN NS localhost."
    local-data: "localhost. 10800 IN SOA localhost. nobody.invalid. 1 3600 1200 604800 10800"
    local-data: "localhost. 10800 IN A 127.0.0.1"
    local-zone: "127.in-addr.arpa." static
    local-zone: "10.in-addr.arpa." transparent
    local-data: "127.in-addr.arpa. 10800 IN NS localhost."
    local-data: "127.in-addr.arpa. 10800 IN SOA localhost. nobody.invalid. 2 3600 1200 604800 10800"
    local-data: "1.0.0.127.in-addr.arpa. 10800 IN PTR localhost."


    tls-system-cert: yes
    unblock-lan-zones: yes
    insecure-lan-zones: yes

remote-control:
  # enable remote-control
  control-enable: yes

  control-interface: 127.0.0.1
  control-port: 9999
  # location of the files created by unbound-control-setup
  server-key-file: "/etc/unbound/unbound_server.key"
  server-cert-file: "/etc/unbound/unbound_server.pem"
  control-key-file: "/etc/unbound/unbound_control.key"
  control-cert-file: "/etc/unbound/unbound_control.pem"

# stub-zone:
#        name: "example.com"
#        stub-addr: 127.0.0.1@53535


forward-zone:
    name: "10.in-addr.arpa."
    forward-addr: 10.0.0.1

forward-zone:
    name: "."

    forward-addr: 127.0.0.1@55

    forward-tls-upstream: yes

    # Cloudflare
    forward-addr: 1.1.1.1@853#cloudflare-dns.com
    forward-addr: 1.0.0.1@853#cloudflare-dns.com
    forward-addr: 2606:4700:4700::1111@853#cloudflare-dns.com
    forward-addr: 2606:4700:4700::1001@853#cloudflare-dns.com

    # Quad9
    forward-addr: 9.9.9.11@853#dns.quad9.net
    forward-addr: 149.112.112.11@853#dns.quad9.net
    forward-addr: 2620:fe::11@853#dns.quad9.net
    forward-addr: 2620:fe::fe:11@853#dns.quad9.net

    # Adguard
    forward-addr: 94.140.14.15@853#family.adguard-dns.com
    forward-addr: 94.140.15.16@853#family.adguard-dns.com
    forward-addr: 2a10:50c0::bad1:ff@853#family.adguard-dns.com
    forward-addr: 2a10:50c0::bad2:ff@853#family.adguard-dns.com

    # CleanBrowser
    forward-addr: 185.228.168.9@853#security-filter-dns.cleanbrowsing.org
    forward-addr: 185.228.169.96@853#security-filter-dns.cleanbrowsing.org
    forward-addr: 2a0d:2a00:1::2@853#security-filter-dns.cleanbrowsing.org
    forward-addr: 2a0d:2a00:2::2@853#security-filter-dns.cleanbrowsing.org

    # Google
    forward-addr: 8,8,8,8@853#dns.google
    forward-addr: 185.228.169.96@853#dns.google
    forward-addr: 2a0d:2a00:1::2@853#dns.google
    forward-addr: 2a0d:2a00:2::2@853#dns.google

    # Mullvad
    forward-addr: 194.242.2.9@853#all.dns.mullvad.net
    forward-addr: 2a07:e340::9@853#all.all.dns.mullvad.net

    # Applied Privacy
    forward-addr: 146.255.56.98@853#dot1.applied-privacy.net
    forward-addr: 2a02:1b8:10:234::2@853#dot1.applied-privacy.net

    # servers.opennic.org

    ## Owner(s): keke
    forward-addr: 80.152.203.134@53#ns2.de.dns.opennic.glue
    forward-addr: 2003:a:64b:3b00::2@53#ns2.de.dns.opennic.glue
    ## Owner(s): keke
    forward-addr: 80.153.146.105@53#ns4.de.dns.opennic.glue
    forward-addr: 2003:a:812:5700::2@53#ns4.de.dns.opennic.glue
